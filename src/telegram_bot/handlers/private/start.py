from aiogram import F, Router, types
from aiogram.enums import ChatType
from aiogram.filters import CommandStart
from dishka.integrations.aiogram import FromDishka, inject

from src.core.auth.id_providers import IdProvider
from src.core.auth.models import LoginInDTO
from src.core.auth.services import AuthService
from src.core.posts.services import PostServices
from src.telegram_bot.keyboards.default import start_kb

start_router = Router()
start_router.message.filter(F.chat.type == ChatType.PRIVATE)

@start_router.message(CommandStart())
@inject
async def command_start_handler(
    message: types.Message,
    auth_service: FromDishka[AuthService],
    id_provider: IdProvider,
):
    await auth_service.telegram_authenticate(
        id_provider=id_provider,
        login_in_dto=LoginInDTO(
            telegram_id=message.from_user.id,
        ),
    )

    msg = (
        "–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–¢–∞–π–Ω—ã–µ –≤–æ–ª–Ω—ã¬ª ‚Äî –∑–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–ø–æ–∫–æ–π–Ω–æ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è, –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ç–µ–º, —á—Ç–æ –¥–∞–≤–Ω–æ –Ω–æ—Å–∏—à—å –≤–Ω—É—Ç—Ä–∏.\n\n"
        "–≠—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Ç—ã –º–æ–∂–µ—à—å:\n\n"
        "‚Ä¢ üó£Ô∏è –í—ã–ø–ª–µ—Å–Ω—É—Ç—å –∏—Å—Ç–æ—Ä–∏—é, —ç–º–æ—Ü–∏—é –∏–ª–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ\n"
        "‚Ä¢ üìñ –ü–æ—á–∏—Ç–∞—Ç—å, —á–µ–º –¥–µ–ª—è—Ç—Å—è –¥—Ä—É–≥–∏–µ ‚Äî —á–µ—Å—Ç–Ω–æ, —Ç–æ–Ω–∫–æ, –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É\n"
        "‚Ä¢ üåä –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ—Å—Ç–∞ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞\n"
        "‚Ä¢ üîí –í—ã–±—Ä–∞—Ç—å, –æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏ —Å–ª–µ–¥, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–≤–æ–∏–º –ø–æ—Å—Ç–∞–º\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –±–æ—Ä—Ç, –ø—É—Å—Ç—å ¬´–¢–∞–π–Ω—ã–µ –≤–æ–ª–Ω—ã¬ª —Å—Ç–∞–Ω—É—Ç —Ç–≤–æ–∏–º –Ω–∞–¥—ë–∂–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ –º–∏—Ä–µ –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–Ω–∏–π! üåô‚ú®"
    )
    kb = start_kb()
    await message.answer(msg, reply_markup=kb)
