services:
  telegram_bot:
    build: .
    container_name: secret-waves-telegram-bot-dev
    env_file:
      - .env
    command: uv run aiogram run polling src:dp --log-level debug --reload
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - ./src/:/app/src/
      - ./migrations/:/app/migrations/

  admin:
    build: .
    container_name: secret-waves-admin-dev
    env_file:
      - .env
    command: uv run uvicorn src:admin_app --host 0.0.0.0 --port 8000 --reload --log-level debug
    depends_on:
      - postgres
      - minio
    ports:
      - 8000:8000
    volumes:
      - ./src/:/app/src/
      - ./migrations/:/app/migrations/

  postgres:
    image: postgres:17-bookworm
    container_name: secret-waves-postgres-dev
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES__USER}
      POSTGRES_PASSWORD: ${POSTGRES__PASSWORD}
      POSTGRES_DB: ${POSTGRES__DATABASE}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:8.0.2-alpine
    container_name: secret-waves-redis-dev
    env_file:
      - .env
    ports:
      - 6379:6379 # default redis port
    volumes:
      - redis_data:/data
    # environment:
    #   - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS__PASSWORD}

  minio:
    image: minio/minio:latest
    container_name: secret-waves-minio-dev
    ports: 
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    
volumes:
  pgdata:
  redis_data:
